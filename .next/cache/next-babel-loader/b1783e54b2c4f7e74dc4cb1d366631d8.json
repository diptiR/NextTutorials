{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\NextJS\\\\NextTutorial\\\\pages\\\\posts\\\\[id].js\";\n\nfunction Post(_ref) {\n  var post = _ref.post;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: post.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Post;\nexport var __N_SSG = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["D:/NextJS/NextTutorial/pages/posts/[id].js"],"names":["Post","post","id"],"mappings":";;;AAAA,SAASA,IAAT,OAAwB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACtB,sBAAO;AAAA,cAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQF,I;;AA8BT,eAAeA,IAAf","sourcesContent":["function Post({ post }) {\r\n  return <p>{post.id}</p>;\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  // Call an external API endpoint to get posts\r\n  const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\r\n  const posts = await res.json();\r\n\r\n  // Get the paths we want to pre-render based on posts\r\n  const paths = posts.map((post) => `/posts/${post.id}`);\r\n\r\n  // We'll pre-render only these paths at build time.\r\n  // { fallback: false } means other routes should 404.\r\n  return { paths, fallback: false };\r\n}\r\n\r\n// This also gets called at build time\r\nexport async function getStaticProps({ params }) {\r\n  // params contains the post `id`.\r\n  // If the route is like /posts/1, then params.id is 1\r\n  const res = await fetch(\r\n    `https://jsonplaceholder.typicode.com/posts/${params.id}`\r\n  );\r\n  const post = await res.json();\r\n\r\n  // Pass post data to the page via props\r\n  return { props: { post } };\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}